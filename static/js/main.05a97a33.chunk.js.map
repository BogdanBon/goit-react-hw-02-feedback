{"version":3,"sources":["components/statistics/Statistics.module.css","components/analitics/Analitics.module.css","components/section/Section.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/notification/Notification.module.css","components/FeedbackOptions/FeedbackOptions.js","components/section/Section.js","components/statistics/Statistics.js","components/analitics/Analitics.js","components/notification/Notification.js","components/reviewCounter/ReviewCounter.js","App.js","index.js"],"names":["module","exports","FeedbackOptions","handleIncrement","options","Object","keys","map","option","className","s","btn","type","onClick","Section","title","children","container","Statistics","onReviewGood","onReviewNeutral","onReviewBad","item_good","item_neutral","item_bad","Analitics","onTotalReviews","onPositiveReviews","item","Notification","message","ReviewCounter","state","good","props","initialValueGood","neutral","initialValueNeutral","bad","initialValueBad","setState","prevState","this","totalReviews","positiveReviews","Math","round","countTotalFeedback","countPositiveFeedbackPercentage","React","Component","defaultProps","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.05a97a33.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Statistics_container__30xuo\",\"item_good\":\"Statistics_item_good__3RvlL\",\"item_neutral\":\"Statistics_item_neutral__3Mnzm\",\"item_bad\":\"Statistics_item_bad__1VQ6t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Analitics_container__3A4jz\",\"item\":\"Analitics_item__16Dmn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Section_container__3qas_\",\"title\":\"Section_title__2oIwe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"FeedbackOptions_btn__1rp9P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Notification_item__32I2G\",\"color\":\"Notification_color__x4_4-\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './FeedbackOptions.module.css';\n\nconst FeedbackOptions = ({ handleIncrement, options }) => (\n  <div>\n    {Object.keys(options).map(option => (\n      <li key={option}>\n        <button\n          className={s.btn}\n          type=\"button\"\n          onClick={() => handleIncrement(option)}\n        >\n          {option}\n        </button>\n      </li>\n    ))}\n  </div>\n);\n\nFeedbackOptions.propTypes = {\n  onBtnClick: PropTypes.func,\n};\n\nexport default FeedbackOptions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nconst Section = ({ title, children }) => (\n  <div className={s.container}>\n    <h2 className={s.title}>{title}</h2>\n    {children}\n  </div>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default Section;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Statistics.module.css';\n\nconst Statistics = ({ onReviewGood, onReviewNeutral, onReviewBad }) => (\n  <div className={s.container}>\n    <p className={s.item_good}>Good: {onReviewGood}</p>\n    <p className={s.item_neutral}>Neutral: {onReviewNeutral}</p>\n    <p className={s.item_bad}>Bad: {onReviewBad}</p>\n  </div>\n);\n\nStatistics.propTypes = {\n  onReviewGood: PropTypes.number.isRequired,\n  onReviewNeutral: PropTypes.number.isRequired,\n  onReviewBad: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Analitics.module.css';\n\nconst Analitics = ({ onTotalReviews, onPositiveReviews }) => (\n  <div className={s.container}>\n    <p className={s.item}>\n      <span>Total reviews:</span>\n      <span>{onTotalReviews}</span>\n    </p>\n    <p className={s.item}>\n      <span>Positive feedback:</span>\n      <span>{onPositiveReviews}</span>\n    </p>\n  </div>\n);\n\nAnalitics.propTypes = {\n  onTotalReviews: PropTypes.number.isRequired,\n  onPositiveReviews: PropTypes.string.isRequired,\n};\n\nexport default Analitics;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Notification.module.css';\n\nconst Notification = ({ message }) => (\n  <div>\n    <p className={s.item}>{message}</p>\n  </div>\n);\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FeedbackOptions from '../FeedbackOptions/FeedbackOptions';\nimport Section from '../section/Section';\nimport Statistics from '../statistics/Statistics';\nimport Analitics from '../analitics/Analitics';\nimport Notification from '../notification/Notification';\n\nclass ReviewCounter extends React.Component {\n  static defaultProps = {\n    initialValueGood: 0,\n    initialValueNeutral: 0,\n    initialValueBad: 0,\n  };\n\n  static propTypes = {\n    initialValueGood: PropTypes.number,\n    initialValueNeutral: PropTypes.number,\n    initialValueBad: PropTypes.number,\n  };\n\n  state = {\n    good: this.props.initialValueGood,\n    neutral: this.props.initialValueNeutral,\n    bad: this.props.initialValueBad,\n  };\n\n  // -------------------------------------------- v1 --------------------------------------------\n  // handleIncrement = event => {\n  //   const checkedBtn = event.target.name;\n\n  //   if (checkedBtn === 'Good') {\n  //     this.setState(prevState => ({ good: prevState.good + 1 }));\n  //   } else if (checkedBtn === 'Neutral') {\n  //     this.setState(prevState => ({ neutral: prevState.neutral + 1 }));\n  //   } else {\n  //     this.setState(prevState => ({ bad: prevState.bad + 1 }));\n  //   }\n  // };\n\n  // -------------------------------------------- v2 --------------------------------------------\n  handleIncrement = option => {\n    this.setState(prevState => ({ [option]: prevState[option] + 1 }));\n  };\n  // --------------------------------------------------------------------------------------------\n\n  countTotalFeedback() {\n    const totalReviews = this.state.good + this.state.neutral + this.state.bad;\n\n    return totalReviews;\n  }\n\n  countPositiveFeedbackPercentage() {\n    const totalReviews = this.state.good + this.state.neutral + this.state.bad;\n    const positiveReviews = this.state.good;\n\n    return `${Math.round((positiveReviews / totalReviews) * 100)} %`;\n  }\n\n  render() {\n    return (\n      <div>\n        <Section title={'Please leave feedback'}>\n          <FeedbackOptions\n            options={this.state}\n            handleIncrement={this.handleIncrement}\n          />\n        </Section>\n\n        {this.countTotalFeedback() > 0 ? (\n          <div>\n            <Section title={'Reviews statistics'}>\n              <Statistics\n                onReviewGood={this.state.good}\n                onReviewNeutral={this.state.neutral}\n                onReviewBad={this.state.bad}\n              />\n            </Section>\n            <Section title={'Reviews analitics'}>\n              <Analitics\n                onTotalReviews={this.countTotalFeedback()}\n                onPositiveReviews={this.countPositiveFeedbackPercentage()}\n              />\n            </Section>\n          </div>\n        ) : (\n          <div>\n            <Section title={'Reviews statistics'}>\n              <Notification message=\"🤷‍♀️ No feedback given yet 🤷‍♂️\" />\n            </Section>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default ReviewCounter;\n","import ReviewCounter from './components/reviewCounter/ReviewCounter';\n\nfunction App() {\n  return (\n    <ReviewCounter\n      initialValueGood={0}\n      initialValueNeutral={0}\n      initialValueBad={0}\n    />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}